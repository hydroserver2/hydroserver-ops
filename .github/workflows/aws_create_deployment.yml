name: Create HydroServer AWS Cloud Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Enter a deployment environment name.'
        type: environment
        required: true

      name:
        type: database
        options: 
        - PostgreSQL
        - TimescaleDB
      initial_setup:
        type: boolean
      environment_tag_key:
        description: 'Enter a tag key to attach to this environment.'
        required: false
      environment_tag_value:
        description: 'Enter a tag value to attach to this environment.'
        required: false

permissions:
  id-token: write
  contents: read

jobs:
  setup-deployment:
    runs-on: ubuntu-20.04
    environment: ${{ github.event.inputs.environment }}
    defaults:
      run:
        working-directory: ./terraform/aws
    steps:
      - name: configureawscredentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ vars.AWS_IAM_ROLE }}
          role-session-name: create-hydroserver-resources
          aws-region: ${{ vars.AWS_REGION }}
    
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: |
          terraform init \
          -backend-config="bucket=${{ vars.TERRAFORM_BUCKET }}" \
          -backend-config="region=${{ vars.AWS_REGION }}" \
          -backend-config="key=state/aws_application_${{ github.event.inputs.environment }}"
  
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan \
          -no-color \
          -var "instance=${{ github.event.inputs.environment }}" \
          -var "region=${{ vars.AWS_REGION }}" \
          -var "tag_key=${{ github.event.inputs.environment_tag_key || 'HydroServerInstance' }}" \
          -var "tag_value=${{ github.event.inputs.environment_tag_value || github.event.inputs.environment }}"
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: |
          terraform apply \
          -auto-approve \
          -var "instance=${{ github.event.inputs.environment }}" \
          -var "region=${{ vars.AWS_REGION }}" \
          -var "tag_key=${{ github.event.inputs.environment_tag_key || 'HydroServerInstance' }}" \
          -var "tag_value=${{ github.event.inputs.environment_tag_value || github.event.inputs.environment }}"
